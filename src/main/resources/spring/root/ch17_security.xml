<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 시큐리티 적용되지 "않는" 요청 경로 설정  -->
	<security:http pattern="/resources/**" security="none"></security:http>
	
	<!-- 시큐리티 필터 체인을 구성 -->
	<security:http>
		<!-- 폼 인증 방식 선택: 폼을 통해서 로그인 인증 -->
		<security:form-login
			login-page="/ch17/loginForm" 
			username-parameter="mid"	
			password-parameter="mpassword"
			login-processing-url="/login"
			authentication-success-handler-ref="ch17authenticationSuccessHandler"
			authentication-failure-handler-ref="ch17authenticationFailureHandler"	/>	
	
		<!-- 로그아웃 설정 -->
		<!-- ${pageContext.request.contextPath}은 /logout 앞에 생략 -->
		<security:logout 
			logout-url="/logout"	
			success-handler-ref="ch17LogoutSuccessHandler"/> <!-- Failure는 없음 -->
		
		<!-- 사이트간 요청 위조 방지 비활성화 -->
		<security:csrf disabled="true"/>	
	</security:http>
	
	<bean id="ch17authenticationSuccessHandler"
			  class="com.mycompany.springframework.security.Ch17authenticationSuccessHandler" />
	
	<bean id="ch17authenticationFailureHandler" 
			  class="com.mycompany.springframework.security.Ch17authenticationFailureHandler" />
			  
	<bean id="ch17LogoutSuccessHandler" 
			  class="com.mycompany.springframework.security.Ch17LogoutSuccessHandler" />
	
	

	<!-- ★ ~ ★ ~ 인증관리자 ~ ★ ~ ★ -->		  
	<!--== DB에서 데이터 가져와서, 사용자가 입력한 값과 비교하는 작업을 관리하는 객체 ==-->
	<security:authentication-manager>
		<!-- 인증제공자: DB에서 데이터를 가져와서 제공해줌 -->
		<security:authentication-provider ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
			  class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="ch17UserDetailService" />
		<property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"></property>	
	</bean>
	
	<bean id="roleHierarchyAuthoritiesMapper"
			  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
			  <constructor-arg ref="roleHierarchyImpl"/>	<!-- 기본생성자가 없기 때문에 생성자 주입 필요 -->
	</bean>
	
	<bean id="roleHierarchyImpl"
			  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
			  <property name="hierarchy">
			  	  <!-- (상위)ROLE_ADMIN > ROLE_MANAGER > ROLE_USER(하위) -->
				  <value>
			  		  ROLE_ADMIN > ROLE_MANAGER
			  		  ROLE_MANAGER > ROLE_USER
				  </value>
			  </property>
	</bean>
	
</beans>







